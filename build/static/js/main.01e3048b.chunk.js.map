{"version":3,"sources":["containers/FiveDaysForecast/DayForecast/DayForecast.css","containers/FavoritesList/Favorite/Favorite.css","containers/Dashboard/Dashboard.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Navigation/Toolbar/Toolbar.css","components/HeaderButtons/HeaderButtons.css","containers/AddToFavorites/AddToFavorites.css","components/Navigation/SideDrawer/SideDrawer.css","components/Layout/Layout.css","containers/FiveDaysForecast/FiveDaysForecast.css","containers/Search/Search.css","containers/FavoritesList/FavoritesList.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/HeaderButtons/DegreesButton/DegreesButton.css","components/HeaderButtons/ScreenModeButton/ScreenModeButton.css","containers/Search/LocationsList/Location/Location.css","containers/Search/LocationsList/LocationsList.css","containers/currentCondition/currentCondition.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","containers/Favorites/Favorites.css","logo.svg","hoc/Aux.js","Contexts/headerButtonsContext.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","Contexts/navigationContext.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/HeaderButtons/DegreesButton/DegreesButton.js","components/HeaderButtons/ScreenModeButton/ScreenModeButton.js","components/HeaderButtons/HeaderButtons.js","components/Layout/Layout.js","Resources/Resources.js","services/weather.js","Contexts/searchContext.js","Contexts/homeContext.js","containers/Search/LocationsList/Location/Location.js","containers/Search/LocationsList/LocationsList.js","containers/Search/Search.js","services/search.js","containers/currentCondition/currentCondition.js","containers/AddToFavorites/AddToFavorites.js","containers/FiveDaysForecast/DayForecast/DayForecast.js","containers/FiveDaysForecast/FiveDaysForecast.js","components/UI/Modal/Modal.js","containers/Dashboard/Dashboard.js","services/favorites.js","store/actions/favorites.js","store/actions/actionType.js","containers/Dashboard/DashboardContainer/DashboardContainer.js","services/geolocation.js","containers/Home/Home.js","containers/FavoritesList/Favorite/Favorite.js","containers/FavoritesList/FavoritesList.js","components/UI/Spinner/Spinner.js","containers/Favorites/Favorites.js","containers/Favorites/FavoritesContainer/FavoritesContainer.js","App.js","serviceWorker.js","store/reducers/favorites.js","index.js"],"names":["module","exports","DayForecast","DayNmae","DarkDayNmae","LightDayNmae","Forecasts","Day","Night","Sun","Moon","SunCloud","MoonCloud","weatherTextDiv","Favorite","DarkFavorite","LightFavorite","Temp","WeatherText","Label","Dashboard","DarkDashboard","LightDashboard","CurrentCondition","FiveDaysForecast","NavigationItem","active","DarkNavigationItem","LightNavigationItem","Toolbar","DarkToolbar","LightToolbar","DesktopOnly","HeaderButtons","Buttons","DarkHeaderButtons","LightHeaderButtons","AddToFavorites","AddToFavoritesAnimation","fontbulger","AddSentence","favoriteIcon","noFavoriteIcon","SideDrawer","Open","Close","Content","DarkContent","LightContent","DarkFiveDaysForecast","LightFiveDaysForecast","Search","Input","FavoritesList","Link","NavigationItems","DrawerToggle","Backdrop","Button","Li","List","CurrentDetails","Modal","Loader","load5","favoriteList","__webpack_require__","p","aux","props","children","headerButtonsContext","React","createContext","setScreenMode","setDegreesMode","degrreMode","screenMode","context","useContext","HeaderButtonsContext","classesArr","classes","react_default","a","createElement","className","join","react_router_dom","activeClassName","to","link","exact","NavigationItems_NavigationItem_NavigationItem","navigataionContext","SideDrawerToggle","drawerToggle","navigationContext","Consumer","onClick","toolbar","dark","DrawerToggle_DrawerToggle","Navigation_NavigationItems_NavigationItems","backdrop","show","clicked","sideDrawer","attachedClasses","open","Aux","Backdrop_Backdrop","closed","degreesButton","Contexts_headerButtonsContext","screenModeButton","headerButtons","DegreesButton_DegreesButton","ScreenModeButton_ScreenModeButton","Layout","_useState","useState","openSideDrawer","_useState2","Object","slicedToArray","layoutState","setLayoutState","_useState3","cDegrre","_useState4","degreesState","setDegreesState","_useState5","darkMode","_useState6","screenModeState","setscreenModeState","SideDrawerToggleHandler","prevState","Provider","value","Toolbar_Toolbar","HeaderButtons_HeaderButtons","SideDrawer_SideDrawer","apiKey","getLocations","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","Resources","sent","json","abrupt","stop","_x","apply","this","arguments","getCuurentConditions","_ref2","_callee2","degreeType","locationKey","_ref3","Value","Unit","_context2","_x2","_x3","_callee4","favorites","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","fav","cuurentConditions","_context4","undefined","Symbol","iterator","done","id","push","name","temp","weatherText","unit","t0","return","finish","getFiveDayForecast","_ref4","_callee3","DailyForecasts","daysForecast","_context3","getForecasts","_x6","_x7","daysArr","forEach","df","dayName","getDayName","Date","day","fToC","Temperature","Maximum","IconPhrase","night","Minimum","dateString","getDay","fahrenheit","fToCel","Math","floor","searchContext","setSearchList","homeContext","setLocation","setError","Location","searchCont","SearchContext","homeCont","HomeContext","locationName","key","locationsList","locations","map","location","LocationsList_Location_Location","Key","LocalizedName","Country","contexts","locationsListState","setLocationsListState","inputState","setInputState","useEffect","setLocations","LocationsList_LocationsList","type","placeholder","onChange","event","e","target","test","onChangeHandler","Contexts_searchContext","isAnimate","isAnimateState","setIsAnimateState","iconClass","isFavorite","heart_o_default","addToFavoritesToggle","sun_o_default","cloud_queue_default","tempDay","weatherTextDay","moon_o_default","tempNight","weatherTextNight","fiveDaysForecast","fiveDayForecast","FiveDaysForecast_DayForecast_DayForecast","nextProps","nextState","modalClosed","style","transform","opacity","Component","curentConditions","forecastsState","setForecastsState","isFavoriteState","setIsFavoriteState","error","errorMassage","errorState","setErrorState","getFavorites","promiseArr","Promise","all","then","positionData","catch","isFav","findIndex","UI_Modal_Modal","currentCondition_currentCondition","containers_AddToFavorites_AddToFavorites","removeFromFavorites","addFavorites","FiveDaysForecast_FiveDaysForecast","dispatch","objectSpread","getFavoritesSuccess","console","log","DashboardContainer","connect","state","ownProps","favoritesReducer","method","headers","Content-Type","body","JSON","stringify","res","action","removeFromFavoritesSuccess","err","getCoordinates","coords","latitude","longitude","resolve","reject","navigator","geolocation","getCurrentPosition","lat","long","getCurrentLocation","lon","Home","loc","split","_this","setState","massage","match","params","geoLocation","currentLocation","_this$state$location","Contexts_homeContext","containers_Search_Search","DashboardContainer_DashboardContainer","favoritesList","favorite","FavoritesList_Favorite_Favorite","spinner","Favorites","favoritesState","setFavoritesState","_x4","_x5","_getFavoritesList","getFavoritesList","Spinner_Spinner","FavoritesList_FavoritesList","FavorietsContainer","withRouter","routes","react_router","path","component","components_Layout_Layout","Boolean","window","hostname","initialState","length","addFavoriteSuccess","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01e3048b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayForecast\":\"DayForecast__DayForecast__-hash-base-64-5-\",\"DayNmae\":\"DayForecast__DayNmae__-hash-base-64-5-\",\"DarkDayNmae\":\"DayForecast__DarkDayNmae__-hash-base-64-5-\",\"LightDayNmae\":\"DayForecast__LightDayNmae__-hash-base-64-5-\",\"Forecasts\":\"DayForecast__Forecasts__-hash-base-64-5-\",\"Day\":\"DayForecast__Day__-hash-base-64-5-\",\"Night\":\"DayForecast__Night__-hash-base-64-5-\",\"Sun\":\"DayForecast__Sun__-hash-base-64-5-\",\"Moon\":\"DayForecast__Moon__-hash-base-64-5-\",\"SunCloud\":\"DayForecast__SunCloud__-hash-base-64-5-\",\"MoonCloud\":\"DayForecast__MoonCloud__-hash-base-64-5-\",\"weatherTextDiv\":\"DayForecast__weatherTextDiv__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favorite\":\"Favorite__Favorite__-hash-base-64-5-\",\"DarkFavorite\":\"Favorite__DarkFavorite__-hash-base-64-5-\",\"LightFavorite\":\"Favorite__LightFavorite__-hash-base-64-5-\",\"Temp\":\"Favorite__Temp__-hash-base-64-5-\",\"WeatherText\":\"Favorite__WeatherText__-hash-base-64-5-\",\"Label\":\"Favorite__Label__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard__Dashboard__-hash-base-64-5-\",\"DarkDashboard\":\"Dashboard__DarkDashboard__-hash-base-64-5-\",\"LightDashboard\":\"Dashboard__LightDashboard__-hash-base-64-5-\",\"CurrentCondition\":\"Dashboard__CurrentCondition__-hash-base-64-5-\",\"WeatherText\":\"Dashboard__WeatherText__-hash-base-64-5-\",\"FiveDaysForecast\":\"Dashboard__FiveDaysForecast__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__-hash-base-64-5-\",\"active\":\"NavigationItem__active__-hash-base-64-5-\",\"DarkNavigationItem\":\"NavigationItem__DarkNavigationItem__-hash-base-64-5-\",\"LightNavigationItem\":\"NavigationItem__LightNavigationItem__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__-hash-base-64-5-\",\"DarkToolbar\":\"Toolbar__DarkToolbar__-hash-base-64-5-\",\"LightToolbar\":\"Toolbar__LightToolbar__-hash-base-64-5-\",\"DesktopOnly\":\"Toolbar__DesktopOnly__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderButtons\":\"HeaderButtons__HeaderButtons__-hash-base-64-5-\",\"Buttons\":\"HeaderButtons__Buttons__-hash-base-64-5-\",\"DarkHeaderButtons\":\"HeaderButtons__DarkHeaderButtons__-hash-base-64-5-\",\"LightHeaderButtons\":\"HeaderButtons__LightHeaderButtons__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddToFavorites\":\"AddToFavorites__AddToFavorites__-hash-base-64-5-\",\"AddToFavoritesAnimation\":\"AddToFavorites__AddToFavoritesAnimation__-hash-base-64-5-\",\"fontbulger\":\"AddToFavorites__fontbulger__-hash-base-64-5-\",\"AddSentence\":\"AddToFavorites__AddSentence__-hash-base-64-5-\",\"favoriteIcon\":\"AddToFavorites__favoriteIcon__-hash-base-64-5-\",\"noFavoriteIcon\":\"AddToFavorites__noFavoriteIcon__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__-hash-base-64-5-\",\"Open\":\"SideDrawer__Open__-hash-base-64-5-\",\"Close\":\"SideDrawer__Close__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__-hash-base-64-5-\",\"DarkContent\":\"Layout__DarkContent__-hash-base-64-5-\",\"LightContent\":\"Layout__LightContent__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FiveDaysForecast\":\"FiveDaysForecast__FiveDaysForecast__-hash-base-64-5-\",\"DarkFiveDaysForecast\":\"FiveDaysForecast__DarkFiveDaysForecast__-hash-base-64-5-\",\"LightFiveDaysForecast\":\"FiveDaysForecast__LightFiveDaysForecast__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search__Search__-hash-base-64-5-\",\"Input\":\"Search__Input__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesList\":\"FavoritesList__FavoritesList__-hash-base-64-5-\",\"Link\":\"FavoritesList__Link__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"DegreesButton__Button__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ScreenModeButton__Button__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Li\":\"Location__Li__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"LocationsList__List__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CurrentDetails\":\"currentCondition__CurrentDetails__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__-hash-base-64-5-\",\"load5\":\"Spinner__load5__-hash-base-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoriteList\":\"Favorites__favoriteList__-hash-base-64-5-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const aux = props => props.children\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nconst headerButtonsContext = React.createContext({\r\n    setScreenMode: () => { },\r\n    setDegreesMode: () => { },\r\n    degrreMode: true,\r\n    screenMode: true\r\n});\r\n\r\nexport default headerButtonsContext;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.css'\r\nimport HeaderButtonsContext from '../../../../Contexts/headerButtonsContext';\r\nconst NavigationItem = props => {\r\n    const context = useContext(HeaderButtonsContext);\r\n\r\n    let classesArr = [classes.NavigationItem, classes.DarkNavigationItem]\r\n    if (!context.screenMode) {\r\n        classesArr = [classes.NavigationItem, classes.LightNavigationItem]\r\n    }\r\n\r\n    return (\r\n        <li className={classesArr.join(\" \")}>\r\n            <NavLink activeClassName={classes.active} to={props.link} exact={props.exact}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.css';\r\nconst NavigationItems = props => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' exact>Home</NavigationItem>\r\n        <NavigationItem link='/favorites'>Favorites</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\n\r\nconst navigataionContext = React.createContext({\r\n    SideDrawerToggle: () => { }\r\n});\r\n\r\nexport default navigataionContext;","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\nimport navigataionContext from '../../../../Contexts/navigationContext';\r\nconst drawerToggle = () => (\r\n    <navigataionContext.Consumer>\r\n        {context =>\r\n            <div className={classes.DrawerToggle} onClick={context.SideDrawerToggle}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        }\r\n    </navigataionContext.Consumer>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport classes from './Toolbar.css';\r\nconst toolbar = props => {\r\n\r\n    let classesArr = [classes.Toolbar, classes.DarkToolbar]\r\n    if (!props.dark) {\r\n        classesArr = [classes.Toolbar, classes.LightToolbar]\r\n    }\r\n\r\n    return (\r\n        <header className={classesArr.join(\" \")}>\r\n            <DrawerToggle />\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n};\r\n\r\nexport default toolbar;\r\n","import React from 'react'\r\nimport classes from './Backdrop.css'\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop; ","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux';\r\nimport classes from './SideDrawer.css';\r\nconst sideDrawer = props => {\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <div>\r\n                <Backdrop show={props.show} clicked={props.SideDrawerToggle} />\r\n            </div>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport classes from './DegreesButton.css';\r\nimport HeaderButtonsContext from '../../../Contexts/headerButtonsContext';\r\n\r\nconst degreesButton = () => (\r\n    <HeaderButtonsContext.Consumer>\r\n        {context =>\r\n            <button onClick={context.setDegreesMode}\r\n                className={classes.Button}>\r\n                ° {context.degrreMode ? 'F' : 'C'}\r\n            </button>\r\n        }\r\n    </HeaderButtonsContext.Consumer>\r\n)\r\n\r\nexport default degreesButton;","import React from 'react';\r\nimport classes from './ScreenModeButton.css';\r\nimport HeaderButtonsContext from '../../../Contexts/headerButtonsContext';\r\n\r\nconst screenModeButton = () => (\r\n    <HeaderButtonsContext.Consumer>\r\n        {context =>\r\n            <button onClick={context.setScreenMode}\r\n                className={classes.Button}>\r\n                {context.screenMode ? 'Light' : 'Dark'}\r\n            </button>\r\n        }\r\n    </HeaderButtonsContext.Consumer>\r\n)\r\n\r\nexport default screenModeButton;","import React from 'react';\r\nimport DegreesButton from './DegreesButton/DegreesButton';\r\nimport ScreenModeButton from './ScreenModeButton/ScreenModeButton';\r\nimport classes from './HeaderButtons.css';\r\n\r\nconst headerButtons = (props) => {\r\n\r\n    let classesArr = [classes.HeaderButtons, classes.DarkHeaderButtons]\r\n    if (!props.dark) {\r\n        classesArr = [classes.HeaderButtons, classes.LightHeaderButtons]\r\n    }\r\n\r\n    return (\r\n        <div className={classesArr.join(\" \")}>\r\n            <div className={classes.Buttons}>\r\n                <DegreesButton />\r\n                <ScreenModeButton />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default headerButtons;","import React, { useState } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport navigataionContext from '../../Contexts/navigationContext';\r\nimport HeaderButtons from '../HeaderButtons/HeaderButtons';\r\nimport HeaderButtonsContext from '../../Contexts/headerButtonsContext';\r\nimport classes from './Layout.css';\r\nconst Layout = props => {\r\n\r\n    const [layoutState, setLayoutState] = useState({\r\n        openSideDrawer: false\r\n    })\r\n\r\n    const [degreesState, setDegreesState] = useState({\r\n        cDegrre: true\r\n    })\r\n\r\n    const [screenModeState, setscreenModeState] = useState({\r\n        darkMode: true\r\n    })\r\n\r\n    const SideDrawerToggleHandler = () => {\r\n        setLayoutState(prevState => ({\r\n            openSideDrawer: !prevState.openSideDrawer\r\n        }))\r\n    }\r\n\r\n    const degreesToggleHandler = () => {\r\n        setDegreesState(prevState => ({\r\n            cDegrre: !prevState.cDegrre\r\n        }))\r\n    }\r\n\r\n    const screenModeToggleHandler = () => {\r\n        setscreenModeState(prevState => ({\r\n            darkMode: !prevState.darkMode\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    let classesArr = [classes.Content, classes.DarkContent]\r\n    if (!screenModeState.darkMode) {\r\n        classesArr = [classes.Content, classes.LightContent]\r\n    }\r\n\r\n    return (\r\n\r\n        <Aux>\r\n            <HeaderButtonsContext.Provider\r\n                value={{\r\n                    setScreenMode: screenModeToggleHandler,\r\n                    setDegreesMode: degreesToggleHandler,\r\n                    degrreMode: degreesState.cDegrre,\r\n                    screenMode: screenModeState.darkMode\r\n                }}\r\n            >\r\n                <div>\r\n                    <navigataionContext.Provider\r\n                        value={{ SideDrawerToggle: SideDrawerToggleHandler }}\r\n                    >\r\n                        <Toolbar dark={screenModeState.darkMode} />\r\n                    </navigataionContext.Provider>\r\n                    <HeaderButtons dark={screenModeState.darkMode} />\r\n                    <SideDrawer\r\n                        show={layoutState.openSideDrawer}\r\n                        SideDrawerToggle={SideDrawerToggleHandler}\r\n                        open={layoutState.openSideDrawer}\r\n                        closed={SideDrawerToggleHandler} />\r\n                </div>\r\n                <main className={classesArr.join(\" \")}>\r\n                    {props.children}\r\n                </main>\r\n            </HeaderButtonsContext.Provider>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Layout;","export const apiKey = 'GLpA001hpXnc17HjfNvrjJqhhN0O5wPZ';\r\nexport const AutocompleteUrl = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete';\r\nexport const CurrentConditionsUrl = 'https://dataservice.accuweather.com/currentconditions/v1';\r\nexport const five_Days_Daily_Forecasts_Url = 'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\r\nexport const GeopositionUrl = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search'; ","import * as Resources from '../Resources/Resources';\r\n\r\nexport const getLocations = async (value) => {\r\n\r\n    const response = await fetch(`${Resources.AutocompleteUrl}?apikey=${Resources.apiKey}&q=${value}`);\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\n\r\nexport const getCuurentConditions = async (degreeType, locationKey) => {\r\n\r\n    const response = await fetch(`${Resources.CurrentConditionsUrl}/${locationKey}?apikey=${Resources.apiKey}`);\r\n    const data = await response.json();\r\n    const { Value, Unit } = degreeType ? data[\"0\"][\"Temperature\"][\"Metric\"] : data[\"0\"][\"Temperature\"][\"Imperial\"];\r\n    const WeatherText = data[\"0\"][\"WeatherText\"];\r\n    return { Value, Unit, WeatherText }\r\n}\r\n\r\n\r\nexport async function getFavoritesList(degreeType, favorites) {\r\n\r\n    const arr = [];\r\n    for (let fav of favorites) {\r\n        const cuurentConditions = await getCuurentConditions(degreeType, fav.id);\r\n        arr.push({\r\n            id: fav.id,\r\n            name: fav.name,\r\n            temp: cuurentConditions.Value,\r\n            weatherText: cuurentConditions.WeatherText,\r\n            unit: cuurentConditions.Unit\r\n        })\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\nexport const getFiveDayForecast = async (degreeType, locationKey) => {\r\n\r\n    const response = await fetch(`${Resources.five_Days_Daily_Forecasts_Url}/${locationKey}?apikey=${Resources.apiKey}`);\r\n    const data = await response.json();\r\n    const { DailyForecasts } = data;\r\n    const daysForecast = getForecasts(degreeType, DailyForecasts);\r\n    return daysForecast;\r\n\r\n}\r\n\r\n\r\nfunction getForecasts(degreeType, DailyForecasts) {\r\n    let day = null, dayForecast = null, nightForecast = null;\r\n    const daysArr = [];\r\n    DailyForecasts.forEach(function (df) {\r\n        daysArr.push({\r\n            dayName: getDayName(df.Date),\r\n            day: {\r\n                temp: degreeType ? fToC(df.Temperature.Maximum.Value) : df.Temperature.Maximum.Value,\r\n                weatherText: df.Day.IconPhrase\r\n            },\r\n            night: {\r\n                temp: degreeType ? fToC(df.Temperature.Minimum.Value) : df.Temperature.Minimum.Value,\r\n                weatherText: df.Night.IconPhrase\r\n            },\r\n            unit: degreeType ? 'C' : 'F'\r\n        })\r\n    })\r\n    return daysArr;\r\n}\r\n\r\n\r\nfunction getDayName(dateString) {\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const date = new Date(dateString);\r\n    const dayName = days[date.getDay()];\r\n    return dayName;\r\n}\r\n\r\n\r\nfunction fToC(fahrenheit) {\r\n    const fTemp = fahrenheit;\r\n    const fToCel = (fTemp - 32) * 5 / 9;\r\n    return Math.floor(fToCel);\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst searchContext = React.createContext({\r\n    setSearchList: () => { }\r\n});\r\n\r\nexport default searchContext;","import React from 'react';\r\n\r\nconst homeContext = React.createContext({\r\n    setLocation: () => { },\r\n    setError: () => { }\r\n});\r\n\r\nexport default homeContext;","import React, { useContext } from 'react';\r\nimport classes from './Location.css';\r\nimport SearchContext from '../../../../Contexts/searchContext';\r\nimport HomeContext from '../../../../Contexts/homeContext';\r\nconst Location = props => {\r\n\r\n  const searchCont = useContext(SearchContext);\r\n  const homeCont = useContext(HomeContext);\r\n\r\n  return (\r\n\r\n    <li className={classes.Li}\r\n      onClick={() => {\r\n        searchCont.setSearchList(null);\r\n        homeCont.setLocation({ name: props.locationName, key: props.locationKey })\r\n      }}>\r\n      {props.locationName}\r\n    </li>\r\n  );\r\n\r\n}\r\n\r\nexport default Location;","import React from 'react';\r\nimport Location from '../LocationsList/Location/Location';\r\nimport classes from './LocationsList.css';\r\nconst locationsList = props => {\r\n\r\n    return (\r\n        <ul className={classes.List}>\r\n            {\r\n                props.locations.map(location =>\r\n                    <Location key={location.Key}\r\n                        locationName={`${location.LocalizedName},${location.Country.LocalizedName}`}\r\n                        locationKey={location.Key}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default locationsList;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { getLocations } from '../../services/weather';\r\nimport LocationsList from './LocationsList/LocationsList';\r\nimport classes from './Search.css';\r\nimport SearchContext from '../../Contexts/searchContext';\r\nimport { isEngliseLetter } from '../../services/search';\r\nimport HomeContext from '../../Contexts/homeContext';\r\n\r\nconst Search = (props) => {\r\n\r\n    const contexts = useContext(HomeContext);\r\n\r\n    const [locationsListState, setLocationsListState] = useState({\r\n        locationsList: null\r\n    })\r\n\r\n    const [inputState, setInputState] = useState({\r\n        value: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        setInputState({\r\n            value: props.name,\r\n        })\r\n    }, [props.name])\r\n\r\n    const setSearchList = locations => {\r\n        setLocationsListState({\r\n            locationsList: locations\r\n        })\r\n    }\r\n\r\n    const setLocations = async (value) => {\r\n        let locations = null;\r\n        if (value) {\r\n            try {\r\n                locations = await getLocations(value);\r\n                setLocationsListState({ locationsList: locations })\r\n            }\r\n            catch (e) {\r\n                contexts.setError('An error occurred while trying to get locations');\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        const value = e.target.value;\r\n        if (!isEngliseLetter(value) || value === \" \") return;\r\n        setInputState({ value });\r\n        setLocations(value);\r\n    }\r\n\r\n    let locationsList = null;\r\n    if (locationsListState.locationsList) {\r\n        locationsList = <LocationsList locations={locationsListState.locationsList} />\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.Search}>\r\n            <input\r\n                className={classes.Input}\r\n                type=\"text\"\r\n                placeholder=\"Search Location...\"\r\n                onChange={(event) => onChangeHandler(event)}\r\n                value={inputState.value}\r\n            />\r\n            <SearchContext.Provider\r\n                value={{\r\n                    setSearchList\r\n                }}\r\n            >\r\n                {locationsList}\r\n            </SearchContext.Provider>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Search;","export function isEngliseLetter(str) {\r\n    const reg = /^[ a-z, A-Z ]*$/;\r\n    const res = reg.test(str);\r\n    return res;\r\n}","import React from 'react';\r\nimport classes from './currentCondition.css';\r\nconst CurrentCondition = props => {\r\n\r\n    return (\r\n        <div>\r\n            <div></div>\r\n            <div className={classes.CurrentDetails}>\r\n                <label>{props.name}</label>\r\n                <label>{props.temp}° {props.unit}</label>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default CurrentCondition;\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport FaHeartO from 'react-icons/lib/fa/heart-o';\r\nimport classes from './AddToFavorites.css';\r\n\r\nconst AddToFavorites = props => {\r\n\r\n    const [isAnimateState, setIsAnimateState] = useState({\r\n        isAnimate: null\r\n    })\r\n\r\n    const setAnimationClasses = () => {\r\n        setIsAnimateState({\r\n            isAnimate: !props.isFavorite\r\n        })\r\n    }\r\n\r\n\r\n    let iconClass = classes.noFavoriteIcon;\r\n    if (props.isFavorite) {\r\n        iconClass = classes.favoriteIcon;\r\n    }\r\n\r\n    let classesArr = [classes.AddToFavorites]\r\n    if (isAnimateState.isAnimate) {\r\n        classesArr = [classes.AddToFavorites, classes.AddToFavoritesAnimation].join(\" \")\r\n    }\r\n\r\n    return (\r\n        <div className={classesArr}>\r\n            <div><FaHeartO className={iconClass}\r\n                onClick={() => {\r\n                    setAnimationClasses();\r\n                    props.addToFavoritesToggle(props.isFavorite)\r\n                }} /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddToFavorites;","import React, { useContext } from 'react';\r\nimport classes from './DayForecast.css';\r\nimport FaSunO from 'react-icons/lib/fa/sun-o';\r\nimport FaMoonO from 'react-icons/lib/fa/moon-o';\r\nimport MdCloudQueue from 'react-icons/lib/md/cloud-queue';\r\nimport HeaderButtonsContext from '../../../Contexts/headerButtonsContext';\r\n\r\nconst DayForecast = props => {\r\n\r\n    const context = useContext(HeaderButtonsContext);\r\n\r\n    let classesArr = [classes.DayNmae, classes.DarkDayNmae]\r\n    if (!context.screenMode) {\r\n        classesArr = [classes.DayNmae, classes.LightDayNmae]\r\n    }\r\n    return (\r\n        <div className={classes.DayForecast}>\r\n            <div className={classesArr.join(\" \")}>\r\n                {props.dayName}\r\n            </div>\r\n            <div className={classes.Forecasts}>\r\n                <div className={classes.Day}>\r\n                    <label>Day</label>\r\n                    <div>\r\n                        <FaSunO className={classes.Sun} />\r\n                        <MdCloudQueue className={classes.SunCloud} />\r\n                    </div>\r\n                    <label>{props.tempDay}° {props.unit}</label>\r\n                    <div className={classes.weatherTextDiv}>\r\n                        <label>{props.weatherTextDay}</label>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.Night}>\r\n                    <label>Night</label>\r\n                    <div>\r\n                        <FaMoonO className={classes.Moon} />\r\n                        <MdCloudQueue className={classes.MoonCloud} />\r\n                    </div>\r\n                    <label>{props.tempNight}° {props.unit}</label>\r\n                    <div className={classes.weatherTextDiv}>\r\n                        <label>{props.weatherTextNight}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default DayForecast;","import React from 'react';\r\nimport DayForecast from './DayForecast/DayForecast';\r\nimport classes from './FiveDaysForecast.css';\r\n\r\nconst fiveDaysForecast = props => {\r\n\r\n    const fiveDayForecast = (\r\n        props.fiveDayForecast.map(df => {\r\n            return <DayForecast\r\n                key={df.dayName}\r\n                dayName={df.dayName}\r\n                tempDay={df.day.temp}\r\n                weatherTextDay={df.day.weatherText}\r\n                tempNight={df.night.temp}\r\n                weatherTextNight={df.night.weatherText}\r\n                unit={df.unit}\r\n            />\r\n        })\r\n    )\r\n\r\n    let classesArr = [classes.FiveDaysForecast, classes.DarkFiveDaysForecast]\r\n    if (!props.dark) {\r\n        classesArr = [classes.FiveDaysForecast, classes.LightFiveDaysForecast]\r\n    }\r\n\r\n    return (\r\n        <div className={classesArr.join(\" \")}>\r\n            {fiveDayForecast}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default fiveDaysForecast;","import React,{Component} from 'react'\r\nimport classes from './Modal.css'\r\nimport Aux from '../../../hoc/Aux'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nclass Modal extends Component{\r\n\r\nshouldComponentUpdate(nextProps,nextState){\r\n     return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n}\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n<Aux>\r\n    <Backdrop show={this.props.show}\r\n              clicked={this.props.modalClosed}\r\n    />\r\n    <div className={classes.Modal} \r\n         style = {{\r\n             transform:this.props.show?'translateY(0)':'translateY(-100vh)',\r\n             opacity:this.props.show?'1':'0'\r\n         }}\r\n    >\r\n        {this.props.children}\r\n    </div>\r\n</Aux>    \r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport CurrentCondition from '../currentCondition/currentCondition';\r\nimport AddToFavorites from '../AddToFavorites/AddToFavorites';\r\nimport classes from './Dashboard.css';\r\nimport { isFavorite } from '../../services/favorites';\r\nimport { getCuurentConditions, getFiveDayForecast } from '../../services/weather';\r\nimport FiveDaysForecast from '../FiveDaysForecast/FiveDaysForecast';\r\nimport HeaderButtonsContext from '../../Contexts/headerButtonsContext';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\n\r\nconst Dashboard = props => {\r\n\r\n    const context = useContext(HeaderButtonsContext);\r\n\r\n    const [forecastsState, setForecastsState] = useState({\r\n        curentConditions: {},\r\n        fiveDaysForecast: []\r\n    });\r\n\r\n    const [isFavoriteState, setIsFavoriteState] = useState({\r\n        isFavorite: null,\r\n    });\r\n\r\n    const [errorState, setErrorState] = useState({\r\n        error: false,\r\n        errorMassage: \"\"\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.getFavorites();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.locationKey) {\r\n            const promiseArr = [getCuurentConditions(context.degrreMode, props.locationKey), getFiveDayForecast(context.degrreMode, props.locationKey)];\r\n            Promise.all(promiseArr)\r\n                .then(positionData => {\r\n                    setForecastsState({\r\n                        curentConditions: positionData[0],\r\n                        fiveDaysForecast: positionData[1]\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    setErrorState({\r\n                        error: true,\r\n                        errorMassage: `An error occurred while trying to get location data.`\r\n                    })\r\n                });\r\n        }\r\n    }, [context.degrreMode, props.locationKey])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.favorites && props.locationKey) {\r\n            const isFav = isFavorite(props.locationKey, props.favorites)\r\n            setIsFavoriteState({\r\n                isFavorite: isFav\r\n            })\r\n        }\r\n    }, [props.locationKey, props.favorites])\r\n\r\n\r\n    const addToFavoritesToggle = isFavorite => {\r\n        if (!isFavorite) {\r\n            const location = {\r\n                id: props.locationKey,\r\n                name: props.locationName\r\n            }\r\n            props.addFavorites(location);\r\n        }\r\n        else {\r\n            props.removeFromFavorites(props.locationKey)\r\n        }\r\n    }\r\n\r\n\r\n    const modalClosed = () => {\r\n        setErrorState({\r\n            error: false,\r\n            errorMassage: \"\"\r\n        })\r\n    }\r\n\r\n    let classesArr = [classes.Dashboard, classes.DarkDashboard];\r\n    if (!context.screenMode) {\r\n        classesArr = [classes.Dashboard, classes.LightDashboard];\r\n    }\r\n\r\n\r\n    let errorMassage = null;\r\n    if (errorState.error) {\r\n        errorMassage = <Modal show={errorState.error}\r\n            modalClosed={modalClosed}>\r\n            {errorState.errorMassage}</Modal>\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className={classesArr.join(\" \")}>\r\n            {errorMassage}\r\n            <div className={classes.CurrentCondition}>\r\n                <CurrentCondition\r\n                    name={props.locationName}\r\n                    temp={forecastsState.curentConditions.Value}\r\n                    unit={forecastsState.curentConditions.Unit}\r\n                />\r\n                <AddToFavorites isFavorite={isFavoriteState.isFavorite}\r\n                    addToFavoritesToggle={(isFavorite) => addToFavoritesToggle(isFavorite)}\r\n                />\r\n            </div>\r\n            <div className={classes.WeatherText}>\r\n                <label>{forecastsState.curentConditions.WeatherText}</label>\r\n            </div>\r\n            <div className={classes.FiveDaysForecast}>\r\n                <FiveDaysForecast dark={context.screenMode}\r\n                    fiveDayForecast={forecastsState.fiveDaysForecast} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dashboard;","\r\n\r\nexport const isFavorite = (id, favorites) => {\r\n\r\n    return favorites.findIndex(fav => fav.id === id) !== -1;\r\n}\r\n\r\n","import * as actionType from './actionType';\r\n\r\nconst addFavoriteSuccess = location => {\r\n    return {\r\n        type: actionType.ADD_FAVORITE_SUCCESS,\r\n        location\r\n    }\r\n}\r\n\r\nexport const addFavorite = (location) => {\r\n\r\n    return dispatch => {\r\n        fetch(`https://weather-globe.firebaseio.com/favorites/${location.id}.json`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(location),\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(addFavoriteSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                console.log('addFavorite Error:', error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst getFavoritesSuccess = (favorites) => {\r\n    return {\r\n        type: actionType.GET_FAVORITES,\r\n        favorites: favorites\r\n    }\r\n}\r\n\r\n\r\nexport const getFavorites = () => {\r\n\r\n    return dispatch => {\r\n        fetch('https://weather-globe.firebaseio.com/favorites.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const favorites = [];\r\n                for (let key in data) {\r\n                    favorites.push({\r\n                        ...data[key],\r\n                    })\r\n                }\r\n                dispatch(getFavoritesSuccess(favorites))\r\n            })\r\n            .catch(error => {\r\n                console.log('addFavorite Error:', error);\r\n            })\r\n    }\r\n}\r\n\r\nconst removeFromFavoritesSuccess = id => {\r\n    return {\r\n        type: actionType.REMOVE_FAVORITE_SUCCESS,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const removeFromFavorites = id => {\r\n    return dispatch => {\r\n        fetch(`https://weather-globe.firebaseio.com/favorites/${id}.json`, { method: 'DELETE' })\r\n            .then(res => dispatch(removeFromFavoritesSuccess(id)))\r\n            .catch(err => console.error(err))\r\n    }\r\n}\r\n\r\n","export const GET_FAVORITES = 'GET_FAVORITES';\r\n\r\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\r\nexport const ADD_FAVORITE_SUCCESS = 'ADD_FAVORITE_SUCCESS';\r\nexport const ADD_FAVORITE_FAIL = 'ADD_FAVORITE_FAIL';\r\n\r\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\r\nexport const REMOVE_FAVORITE_SUCCESS = 'REMOVE_FAVORITE_SUCCESS';\r\nexport const REMOVE_FAVORITE_FAIL = 'REMOVE_FAVORITE_FAIL';","import Dashboard from '../Dashboard';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        favorites: state.favoritesReducer.favorites,\r\n        locationName: ownProps.locationName,\r\n        locationKey: ownProps.locationKey\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addFavorites: (fav) => dispatch(action.addFavorite(fav)),\r\n    getFavorites: () => dispatch(action.getFavorites()),\r\n    removeFromFavorites: (id) => dispatch(action.removeFromFavorites(id))\r\n})\r\n\r\nconst DashboardContainer = connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n\r\nexport default DashboardContainer;\r\n","import * as Resources from '../Resources/Resources';\r\n\r\nfunction getCurrentPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n}\r\n\r\n\r\nexport const getCoordinates = async () => {\r\n  \r\n        const { coords } = await getCurrentPosition();\r\n        const { latitude, longitude } = coords;\r\n        return { lat: latitude, long: longitude };\r\n};\r\n\r\n\r\nexport const getCurrentLocation = async (lat, lon) => {\r\n\r\n    const response = await fetch(`${Resources.GeopositionUrl}?apikey=${Resources.apiKey}&q=${lat},${lon}`);\r\n    const data = await response.json();\r\n    const { Key, LocalizedName } = data;\r\n    return { name: LocalizedName, key: Key }\r\n}","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Search from '../Search/Search';\r\nimport HomeContext from '../../Contexts/homeContext';\r\nimport DashboardContainer from '../Dashboard/DashboardContainer/DashboardContainer';\r\nimport { getCoordinates, getCurrentLocation } from '../../services/geolocation';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        location: {\r\n            name: \"\",\r\n            key: null\r\n        },\r\n        error: false,\r\n        errorMassage: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { key, name } = this.props.match.params;\r\n        if (key && name) {\r\n            const location = { name, key };\r\n            this.setState({\r\n                location,\r\n            })\r\n        }\r\n        else {\r\n            try {\r\n                const geoLocation = await getCoordinates();\r\n                const currentLocation = await getCurrentLocation(geoLocation.lat, geoLocation.long);\r\n                const { name, key } = currentLocation;\r\n                const location = { name, key }\r\n                this.setState({\r\n                    location,\r\n                    error: false,\r\n                    errorMassage: \"\"\r\n                })\r\n            }\r\n            catch (ex) {\r\n                this.setError(`An error occurred while trying to get your current location`);\r\n            }\r\n        }\r\n    }\r\n\r\n    setLocation = loc => {\r\n        const name = loc.name.split(\",\")[0];\r\n        const location = { name, key: loc.key };\r\n        this.setState({\r\n            location,\r\n        })\r\n    }\r\n\r\n    setError = massage => {\r\n        this.setState({\r\n            error: true,\r\n            errorMassage: massage\r\n        })\r\n    }\r\n\r\n    modalClosed = () => {\r\n        this.setState({\r\n            error: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, key } = this.state.location;\r\n\r\n        let errorMassage = null;\r\n        if (this.state.error) {\r\n            errorMassage = <Modal show={this.state.error}\r\n                modalClosed={this.modalClosed}>\r\n                {this.state.errorMassage}</Modal>\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {errorMassage}\r\n                <HomeContext.Provider\r\n                    value={{ setLocation: this.setLocation, setError: this.setError }}\r\n                >\r\n                    <Search name={name}\r\n                    />\r\n                </HomeContext.Provider>\r\n                <DashboardContainer locationName={name}\r\n                    locationKey={key}\r\n                />\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home;","import React, { useContext } from 'react';\r\nimport classes from './Favorite.css';\r\nimport HeaderButtonsContext from '../../../Contexts/headerButtonsContext';\r\n\r\nconst Favorite = props => {\r\n\r\n    const context = useContext(HeaderButtonsContext);\r\n\r\n    let classesArr = [classes.Favorite, classes.DarkFavorite];\r\n    if (!context.screenMode) {\r\n        classesArr = [classes.Favorite, classes.LightFavorite];\r\n    }\r\n\r\n    return (\r\n        <div className={classesArr.join(\" \")}>\r\n            <div className={classes.Temp}>\r\n                <label className={classes.Label}>{props.name}</label>\r\n                <label className={classes.Label}>{props.temp}° {props.unit}</label>\r\n            </div>\r\n            <div>\r\n                <label className={classes.WeatherText}>{props.weatherText}</label>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Favorite;","import React from 'react';\r\nimport classes from './FavoritesList.css';\r\nimport Favorite from './Favorite/Favorite';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst favoritesList = props => {\r\n  const favoritesList = (\r\n\r\n    props.favoritesList.map(favorite => {\r\n      return (\r\n        <Link className={classes.Link} to={`/${favorite.id}/${favorite.name}`}\r\n          key={favorite.id}>\r\n          <Favorite\r\n            name={favorite.name}\r\n            locationKey={favorite.id}\r\n            temp={favorite.temp}\r\n            weatherText={favorite.weatherText}\r\n            unit={favorite.unit}\r\n          /></Link>\r\n      )\r\n    })\r\n  )\r\n\r\n  return (\r\n\r\n    <div className={classes.FavoritesList}>\r\n      {favoritesList}\r\n    </div>\r\n\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default favoritesList;","import React from 'react'\r\nimport classes from './Spinner.css'\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\n\r\nexport default spinner;","import React, { useState, useEffect, useContext } from 'react';\r\nimport FavoritesList from '../FavoritesList/FavoritesList';\r\nimport { getFavoritesList } from '../../services/weather';\r\nimport HeaderButtonsContext from '../../Contexts/headerButtonsContext';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Favorites.css';\r\n\r\nconst Favorites = props => {\r\n\r\n    const context = useContext(HeaderButtonsContext);\r\n\r\n    const [favoritesState, setFavoritesState] = useState({\r\n        favoritesList: null,\r\n    })\r\n\r\n    const [errorState, setErrorState] = useState({\r\n        error: false,\r\n        errorMassage: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.getFavorites();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.favorites) {\r\n            getFavoritesList(context.degrreMode, props.favorites)\r\n                .then(favorites => {\r\n                    setFavoritesState({\r\n                        favoritesList: favorites,\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    setErrorState({\r\n                        error: true,\r\n                        errorMassage: `An error occurred while trying to get Your favorits List.`\r\n                    })\r\n                })\r\n        }\r\n    }, [context.degrreMode, props.favorites])\r\n\r\n\r\n    const modalClosed = () => {\r\n        setErrorState({\r\n            error: false,\r\n            errorMassage: \"\"\r\n        })\r\n    }\r\n\r\n    let errorMassage = null;\r\n    if (errorState.error) {\r\n        errorMassage = <Modal show={errorState.error}\r\n            modalClosed={() => modalClosed()} >\r\n            {errorState.errorMassage}</Modal>\r\n    }\r\n\r\n    let favoriteList = <Spinner />\r\n    if (favoritesState.favoritesList) {\r\n        favoriteList = <FavoritesList favoritesList={favoritesState.favoritesList} />\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {errorMassage}\r\n            <div className={classes.favoriteList}>\r\n                {favoriteList}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Favorites;","import Favorites from '../Favorites';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\n\r\nconst mapStateToProps = state => ({\r\n    favorites: state.favoritesReducer.favorites\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getFavorites: () => dispatch(action.getFavorites())\r\n})\r\n\r\nconst FavorietsContainer = connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n\r\nexport default FavorietsContainer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport {Route,Switch,withRouter} from 'react-router-dom'\nimport Home from './containers/Home/Home';\nimport FavorietsContainer from './containers/Favorites/FavoritesContainer/FavoritesContainer';\n\nconst app = () => {\n\n  let routes = (\n    <Switch>\n       <Route path=\"/\" exact component={Home}/>\n       <Route path=\"/favorites\" component={FavorietsContainer}/>\n       <Route path=\"/:key/:name\" exact component={Home}/>\n    </Switch>\n  )\n\n  return (\n    <Layout>\n      {routes}\n    </Layout>\n\n  );\n}\n\nexport default withRouter(app);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionType from '../actions/actionType';\r\n\r\nconst initialState = {\r\n    favorites: null\r\n}\r\n\r\nconst getFavoritesSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        favorites: action.favorites\r\n    }\r\n}\r\n\r\nconst addFavoriteSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        favorites: state.favorites.concat(action.location)\r\n    }\r\n}\r\n\r\nconst removeFromFavoritesSuccess = (state, action) => {\r\n    const favorites = state.favorites.filter(fav => fav.id !== action.id);\r\n    return {\r\n        ...state,\r\n        favorites\r\n    }\r\n}\r\n\r\n\r\n\r\nconst favoritesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionType.GET_FAVORITES: return getFavoritesSuccess(state, action); break;\r\n        case actionType.ADD_FAVORITE_SUCCESS: return addFavoriteSuccess(state, action); break;\r\n        case actionType.REMOVE_FAVORITE_SUCCESS: return removeFromFavoritesSuccess(state, action); break;\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default favoritesReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport favoritesReducer from './store/reducers/favorites';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    favoritesReducer\n});\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n<Provider store={store}>\n   <BrowserRouter>\n      <App/>\n   </BrowserRouter>\n</Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}